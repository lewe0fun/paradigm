package maze;/*Структурное программирование:
__
Трассировка пути в лабиринте:
__
Описание: Имеется двумерный массив, представляющий лабиринт, где '0' - это проход, а '1' - это стена. Начальная и конечная точки заданы. Необходимо определить путь от начальной до конечной точки.
Почему это структурное программирование: Задача может быть решена с помощью последовательных шагов, ветвлений (проверка на наличие стены или уже посещенной клетки) и циклов (для обработки всех возможных направлений движения).

__

**Структурное программирование:

Трассировка пути в лабиринте:**
__
Задание: Создайте функцию, которая принимает двумерный массив (лабиринт) и начальную и конечную точки. Функция должна возвращать путь от начальной до конечной точки или сообщение, что путь невозможен.
Входные данные:
Двумерный массив размера MxN, где '0' - это проход, а '1' - это стена.
Координаты начальной и конечной точки.
Выходные данные:
Массив координат пути или сообщение об ошибке.
**Процедурное программирование:
*/

import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        solveMaze(new Maze(10, 10),new Point(5, 5,"start"),new Point(9, 5,"exit"));
    }

    public static List<Point> solveMaze(Maze maze, Point start, Point exit) {
        List<Point> path=new ArrayList<>();
        maze.setStart(start);
        maze.setExit(exit);
        System.out.println(maze);

        // в процессе

        if (path.size()==0) System.out.println("Выхода нет");
        return path;

    }

    public static boolean explore(Maze maze, Point current, Point exit){
        // в процессе
        return false;
    }
}